# Generated by Django 5.1.5 on 2025-01-22 14:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BlockType', models.CharField(max_length=255, unique=True, verbose_name='Тип блока')),
            ],
            options={
                'verbose_name': 'Тип блока',
                'verbose_name_plural': 'Типы блоков',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Категория')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('url', models.SlugField(max_length=160, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='data/', verbose_name='Изображение')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Сортировка')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Наименование валюты')),
                ('symbol', models.CharField(max_length=2, null=True, verbose_name='Валютный знак')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
            },
        ),
        migrations.CreateModel(
            name='FilterSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_category_filter', models.BooleanField(default=True, verbose_name='Показывать фильтр категорий')),
                ('show_brand_filter', models.BooleanField(default=True, verbose_name='Показывать фильтр брендов')),
                ('show_availability_filter', models.BooleanField(default=True, verbose_name='Показывать фильтр по наличию')),
                ('show_power_filter', models.BooleanField(default=True, verbose_name='Показывать фильтр мощности')),
                ('show_blocktype_filter', models.BooleanField(default=True, verbose_name='Показывать фильтр по типу блока')),
                ('show_invertor_filter', models.BooleanField(default=True, verbose_name='Показывать фильтр инвертора')),
                ('show_splitsystem_filter', models.BooleanField(default=True, verbose_name='Показывать фильтр сплит систем')),
                ('show_price_filter', models.BooleanField(default=True, verbose_name='Показывать фильтр по ценам')),
            ],
        ),
        migrations.CreateModel(
            name='Powerr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NamePower', models.CharField(max_length=255, unique=True, verbose_name='Мощность')),
            ],
            options={
                'verbose_name': 'Мощность',
                'verbose_name_plural': 'Мощности',
            },
        ),
        migrations.CreateModel(
            name='SplitSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SplitSystem', models.CharField(max_length=255, unique=True, verbose_name='Сплит система')),
            ],
            options={
                'verbose_name': 'Сплит система',
                'verbose_name_plural': 'Сплит системы',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=130, verbose_name='Логин')),
                ('ip', models.CharField(default='1.0.0.1', max_length=15, verbose_name='IP адрес')),
                ('password', models.CharField(blank=True, max_length=150, verbose_name='Пароль')),
            ],
            options={
                'verbose_name': 'Посетитель',
                'verbose_name_plural': 'Посетители',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Общая цена')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Бренд')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('url', models.SlugField(max_length=160, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='data/', verbose_name='Изображение')),
                ('sort_order', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Сортировка')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
                ('category', models.ManyToManyField(related_name='brand_category', to='techno.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
            },
        ),
        migrations.CreateModel(
            name='CategoryBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.SlugField(max_length=160, unique=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='techno.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='techno.category')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('series', models.CharField(blank=True, max_length=100, null=True, verbose_name='Серия')),
                ('type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Исполнение')),
                ('price', models.DecimalField(decimal_places=2, default=0, help_text='Проверить валюту', max_digits=12, verbose_name='Цена')),
                ('availability', models.PositiveIntegerField(default=0, verbose_name='Наличие')),
                ('power', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True, verbose_name='Производительность')),
                ('relevance', models.CharField(default=1, max_length=100, null=True, verbose_name='Актуальность')),
                ('mark', models.CharField(default='0', max_length=50, verbose_name='Отметка')),
                ('date_of_establishment', models.DateField(default='2025-01-22', verbose_name='Дата заведения')),
                ('image', models.ImageField(blank=True, upload_to='data/', verbose_name='Изображение')),
                ('number_of_views', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('draft', models.BooleanField(default=False, verbose_name='Черновик')),
                ('invertor', models.BooleanField(default=False, verbose_name='Инвертор')),
                ('url', models.SlugField(max_length=130, unique=True)),
                ('noise', models.CharField(blank=True, max_length=50, null=True, verbose_name='Шум')),
                ('refrigerant', models.CharField(blank=True, max_length=50, null=True, verbose_name='Хладагент')),
                ('compressor_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Тип компрессора')),
                ('split_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Тип сплита')),
                ('BlockType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocktype_category', to='techno.blocktype', verbose_name='Тип блока')),
                ('Powerr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='power_category', to='techno.powerr', verbose_name='Мощность')),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_brand', to='techno.brand', verbose_name='Бренд')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_category', to='techno.category', verbose_name='Категория')),
                ('currency', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='techno.currency', verbose_name='Валюта')),
                ('SplitSystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='splitsystem_category', to='techno.splitsystem', verbose_name='Сплит система')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='CartQuantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='techno.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='techno.product')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(related_name='carts', through='techno.CartQuantity', to='techno.product'),
        ),
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='Название поля атрибута')),
                ('value', models.CharField(blank=True, default='', max_length=100, verbose_name='Значение поля атрибута')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attr_product', to='techno.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Атрибут',
                'verbose_name_plural': 'Атрибуты',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.IntegerField(default=0, verbose_name='Персональная скидка')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
    ]
